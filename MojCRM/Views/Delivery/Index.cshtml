@using GridMvc.Html

@model IEnumerable<MojCRM.Models.Delivery>

@{
    ViewBag.Title = "Dostava eRačuna";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<body>
    <h2>Pregled dokumenata za dostavu</h2>

    <br />
    <div>
        <div class="row">
            <div class="col-md-6">
                <a href="@Url.Action("CreateTickets", "Delivery")" class="btn btn-primary">
                    Kreiranje kartica za dostavu
                </a>
                <a href="@Url.Action("UpdateAllStatuses", "Delivery")" class="btn btn-warning">
                    Provjeri sve statuse
                </a>
                <a id="remove-all" action="@Url.Action("RemoveAll", "Delivery")" method="post">
                    <input type="button" class="btn btn-danger" onclick="javascript: RemoveAll()" value="Ukloni sve račune" />
                </a>
            </div>
        </div>
    </div>
    <br />

    @using (Html.BeginForm("Index", "Delivery", FormMethod.Get))
    {
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="sender-search">Naziv pošiljatelja</label>
                    <div id="sender-search">
                        @Html.TextBox("Sender", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Naziv pošiljatelja" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="receiver-search">Naziv primatelja</label>
                    <div id="receiver-search">
                        @Html.TextBox("Receiver", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Naziv primatelja" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="invoice-number-search">Interni broj</label>
                    <div id="invoice-number-search">
                        @Html.TextBox("InvoiceNumber", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Interni broj" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group" data-provide="datepicker">
                    <label for="sent-date-search">Datum slanja dokumenta</label>
                    <div>
                        @Html.TextBox("SentDate", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Datum slanja dokumenta", @type = "text", @id = "sent-date-search", @name = "sent-date-search" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    <button id="Search" type="submit" class="btn btn-primary">Traži!</button>
                    <button id="ResetSearch" type="reset" class="btn btn-warning">Poništi!</button>
                </div>
            </div>
            <div class="col-md-4">
                <div class="alert alert-info">
                    Broj trenutno otvorenih kartica: <strong>@ViewBag.OpenTickets</strong>
                </div>
            </div>
            <div class="col-md-4">

            </div>
            <div class="col-md-2">

            </div>
        </div>
    }
    @Html.Grid(Model).Named("PopisRačunaZaDostavu").SetLanguage("hr").EmptyText("Nema rezultata").Columns(columns =>
{
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(o => Html.CheckBox("checked", false, new { o.MerElectronicId, @class = "checked", @id = "checkbox"}));
    columns.Add(m => m.Sender.SubjectName).Encoded(false).Sanitized(false).Titled("Pošijatelj").RenderValueAs(m => m.Sender.SubjectName + " (" + m.Sender.VAT + ") - " + m.Sender.SubjectBusinessUnit).Sortable(true);
    columns.Add(m => m.Receiver.SubjectName).Encoded(false).Sanitized(false).Titled("Primatelj").RenderValueAs(m => m.Receiver.SubjectName + " (" + m.Receiver.VAT + ") - " + m.Receiver.SubjectBusinessUnit).Sortable(true);
    columns.Add(m => m.InvoiceNumber).Encoded(false).Sanitized(false).Titled("Interni broj dokumenta").Sortable(false);
    columns.Add(m => m.SentDate).Encoded(false).Sanitized(false).Titled("Datum slanja dokumenta").Sortable(true).Format("{0:dd.MM.yyyy}");
    columns.Add(m => m.MerDocumentTypeIdString).Encoded(false).Sanitized(false).Titled("Tip dokumenta").Sortable(true);
    columns.Add(m => m.InsertDate).Encoded(false).Sanitized(false).Titled("Datum kreiranja kartice").Sortable(true).Format("{0:dd.MM.yyyy}");
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(m =>
    {
        if (m.DocumentStatus == 30)
            return @<span>
        <a href="@Url.RouteUrl(new { action = "Details", controller = "Delivery", area = "", m.Id, returnUrl = Request.Url })"><i class="glyphicon glyphicon-edit"></i></a>
        <a data-mer-id="@Html.Raw(m.MerElectronicId)" href="#" class="remove-from-list-ajax"><i class="glyphicon glyphicon-remove"></i></a>
    </span>;

        return @<span>
        <a href="@Url.RouteUrl(new { action = "Details", controller = "Delivery", area = "", m.Id, returnUrl = Request.Url })"><i class="glyphicon glyphicon-edit"></i></a>
    </span>;
    });
}).WithPaging(20)
</body>



<script>
    $(document).on("click", "a.remove-from-list-ajax", function (e) {
        e.preventDefault();
        if (window.confirm("Jeste li sigurni da želite ukloniti ovaj račun iz popisa za dostavu?"))
            $.ajax({
                method: 'POST',
                url: '@Url.RouteUrl(new { action = "RemoveAll", controller = "Delivery", area = "" })',
                data: {
                    MerElectronicId: $(this).data("mer-id")
                },
                success: function (data) {
                    if (data.Status === 'OK')
                        alert("Uspješno ste uklonili račun iz popisa za dostavu!");
                    else
                        alert("Greška!");
                },
                dataType: 'json'
            });
    });
</script>
<script>
    function RemoveAll () {
        $(document).on("click", "#remove-all", function (e) {
            e.preventDefault();
            var selectedItems = $('input.checked:checked').map(function () { return $(this).attr(MerElectronicId); })
            if (window.confirm("Jeste li sigurni da želite ukloniti označene račune iz popisa za dostavu?"))
                $.ajax({
                    method: 'POST',
                    url: '@Url.RouteUrl(new { action = "Remove", controller = "Delivery", area = "" })',
                    data: {
                        selectedItems
                    },
                    success: function (data) {
                        if (data.Status === 'OK')
                            alert("Uspješno ste uklonili račune iz popisa za dostavu!");
                        else
                            alert("Greška!");
                    },
                    dataType: 'json'
                });
        });
    }
</script>
<script>
    $('#sent-date-search').datepicker({
        format: "dd.mm.yyyy",
        todayBtn: true,
        language: "hr",
        autoclose: true
    })
</script>