@using GridMvc.Html

@model IQueryable<MojCRM.Areas.HelpDesk.Models.AcquireEmail>
@{
    ViewBag.Title = "Ažuriranje baza korisnika";
    Layout = "~/Views/Shared/_UserLayoutNew.cshtml";
}


<h2>Ažuriranje baza korisnika</h2>
<hr />
@Html.Grid(Model).Named("PopisPredmetaZaAžuriranjeBazaKorisnika").SetLanguage("hr").EmptyText("Nema rezultata").Columns(columns =>
{
//columns.Add().Encoded(false).Sanitized(false).RenderValueAs(r => Html.CheckBox("checked", false, new { r.Id, @class = "checked", @id = "checkbox" }));
columns.Add(r => r.Campaign.CampaignName).Encoded(false).Sanitized(false).Titled("Kampanja").Sortable(true);
columns.Add(r => r.Organization.SubjectName).Encoded(false).Sanitized(false).Titled("Naziv tvrtke za kontakt").RenderValueAs(v =>
Html.RouteLink(v.Organization.SubjectName + " (" + v.Organization.VAT + ")", new { action = "Details", controller = "Organizations", area = "", id = v.RelatedOrganizationId }));
columns.Add(r => r.Organization.OrganizationDetail.TelephoneNumber).Encoded(false).Sanitized(false).Titled("Kontakt brojevi telefona").RenderValueAs(v =>
v.Organization.OrganizationDetail.TelephoneNumber + ";" + v.Organization.OrganizationDetail.MobilePhoneNumber);
columns.Add(r => r.Organization.MerDeliveryDetail.AcquiredReceivingInformation).Encoded(false).Sanitized(false).Titled("Informacija o zaprimanju eRačuna").Sortable(false);
columns.Add(r => r.AcquireEmailStatusString).Encoded(false).Sanitized(false).Titled("Status");
columns.Add().Encoded(false).Sanitized(false).Titled("Aktivnosti").RenderValueAs(v =>
{
    return @<span>
    <a class="add-successfull-call" data-entity-id="@v.Id" title="Zabilježi uspješan poziv"><i style="color: forestgreen" class="fa fa-phone-square"></i></a>
    <a class="add-unsuccessfull-call" data-entity-id="@v.Id" title="Zabilježi neuspješan poziv"><i style="color: red" class="fa fa-phone-square"></i></a>
    </span>;
    });
    columns.Add().Encoded(false).Sanitized(false).Titled("Alati").RenderValueAs(v =>
    {
        if ((User.IsInRole("Guest") || User.IsInRole("Management") || User.IsInRole("Administrator") || User.IsInRole("Superadmin")) && v.AcquireEmailStatus == MojCRM.Areas.HelpDesk.Models.AcquireEmail.AcquireEmailStatusEnum.CREATED)
        {
            return @<span>
                 <a class="mark-checked" data-entity-id="@v.Id" title="Označi kao provjereno"><i style="color: red" class="fa fa-check-circle-o"></i></a>
                 <a href="@Url.RouteUrl(new { action = "Details", controller = "AcquireEmail", area = "HelpDesk", id = v.Id })" title="Uredi informaciju o zaprimanju eRačuna"><i class="fa fa-edit"></i></a>
    </span>;
        }
        if (User.IsInRole("Guest") && v.AcquireEmailStatus == MojCRM.Areas.HelpDesk.Models.AcquireEmail.AcquireEmailStatusEnum.CHECKED)
        {
            return @<span>
    <i style="color: gold" title="Provjereno / Čeka verifikaciju" class="fa fa-check-circle-o"></i>
</span>;
        }
        if ((User.IsInRole("Management") || User.IsInRole("Administrator") || User.IsInRole("Superadmin")) && v.AcquireEmailStatus == MojCRM.Areas.HelpDesk.Models.AcquireEmail.AcquireEmailStatusEnum.CHECKED)
        {
            return @<span>
             <a class="mark-verified" data-entity-id="@v.Id" title="Označi kao provjereno"><i style="color: gold" title="Provjereno / Čeka verifikaciju" class="fa fa-check-circle-o"></i></a>
             <a href="@Url.RouteUrl(new { action = "Details", controller = "AcquireEmail", area = "HelpDesk", id = v.Id })" title="Uredi informaciju o zaprimanju eRačuna"><i class="fa fa-edit"></i></a>
</span>;
        }
        return @<span>
    </span>;
    });
}).WithPaging(20)

<script>
    $(document).on("click", "a.add-successfull-call", function (e) {
        e.preventDefault();
        $.ajax({
            method: 'POST',
            url: '@Url.RouteUrl(new { action = "LogActivity", controller = "AcquireEmail", area = "HelpDesk" })',
            data: {
                EntityId: $(this).data("entity-id"),
                Identifier: 1
            },
            success: function (data) {
                if (data.Status === 'OK')
                    alert("Zabilježili ste uspješan poziv!");
            },
            dataType: 'json'
        });
    });
        $(document).on("click", "a.add-unsuccessfull-call", function (e) {
        e.preventDefault();
        $.ajax({
            method: 'POST',
            url: '@Url.RouteUrl(new { action = "LogActivity", controller = "AcquireEmail", area = "HelpDesk" })',
            data: {
                EntityId: $(this).data("entity-id"),
                Identifier: 2
            },
            success: function (data) {
                if (data.Status === 'OK')
                    alert("Zabilježili ste neuspješan poziv!");
            },
            dataType: 'json'
        });
    });
        $(document).on("click", "a.mark-checked", function (e) {
        e.preventDefault();
        $.ajax({
            method: 'POST',
            url: '@Url.RouteUrl(new { action = "ChangeStatus", controller = "AcquireEmail", area = "HelpDesk" })',
            data: {
                EntityId: $(this).data("entity-id"),
                Identifier: 1
            },
            success: function (data) {
                if (data.Status === 'OK')
                    alert("Označili ste unos provjerenim!");
            },
            dataType: 'json'
        });
        window.location.reload(true);
    });
        $(document).on("click", "a.mark-verified", function (e) {
        e.preventDefault();
        $.ajax({
            method: 'POST',
            url: '@Url.RouteUrl(new { action = "ChangeStatus", controller = "AcquireEmail", area = "HelpDesk" })',
            data: {
                EntityId: $(this).data("entity-id"),
                Identifier: 2
            },
            success: function (data) {
                if (data.Status === 'OK')
                    alert("Označili ste unos verificiranim!");
            },
            dataType: 'json'
        });
        window.location.reload(true);
    });
</script>
