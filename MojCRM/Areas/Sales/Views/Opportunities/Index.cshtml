@using GridMvc.Html
@model IEnumerable<MojCRM.Areas.Sales.Models.Opportunity>

@{
    ViewBag.Title = "Pregled prodajnih prilika";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<h2 style="text-align:center"><strong>Pregled prodajnih prilika</strong></h2>

<hr />

@if (User.IsInRole("Management") || User.IsInRole("Administrator") || User.IsInRole("Superadmin"))
{
    <div>
        <div class="row" style="text-align:center">
            <div class="col-md-12">
                <div class="btn btn-group" role="group">
                    <a href="@Url.Action("Create", "Opportunities")" class="btn btn-default btn-sm" title="Dodaj prodajnu priliku">
                        <i class="fa fa-plus"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <hr />
}

@Html.Grid(Model).Named("PopisProdajnihPrilika").SetLanguage("hr").EmptyText("Nema rezultata").Columns(columns =>
{
    columns.Add(m => m.RelatedCampaign.CampaignName).Encoded(false).Sanitized(false).Titled("Naziv kampanje").Sortable(true);
    columns.Add(m => m.OpportunityTitle).Encoded(false).Sanitized(false).Titled("Naziv prilike").Sortable(false);
    columns.Add(m => m.RelatedOrganization.SubjectName).Encoded(false).Sanitized(false).Titled("Naziv tvrtke").Sortable(false);
    columns.Add(m => m.OpportunityStatus).Encoded(false).Sanitized(false).Titled("Status prilike").Sortable(true).RenderValueAs(m =>
    {
    if (m.OpportunityStatus == MojCRM.Areas.Sales.Models.Opportunity.OpportunityStatusEnum.START)
    {
        return @<div><span class="label label-default">@Html.Raw(m.OpportunityStatusString)</span></div>;
        }
        if (m.OpportunityStatus == MojCRM.Areas.Sales.Models.Opportunity.OpportunityStatusEnum.INCONTACT)
        {
            return @<div><span class="label label-primary">@Html.Raw(m.OpportunityStatusString)</span></div>;
        }
        if (m.OpportunityStatus == MojCRM.Areas.Sales.Models.Opportunity.OpportunityStatusEnum.LEAD)
        {
            return @<div><span class="label label-success">@Html.Raw(m.OpportunityStatusString)</span></div>;
        }

        return @<div><span class="label label-danger">@Html.Raw(m.OpportunityStatusString)</span><br /><span style="color:red">@Html.Raw(m.OpportunityRejectReasonString)</span></div>;
    });
    columns.Add(m => m.OpportunityDescription).Encoded(false).Sanitized(false).Titled("Opis prilike").Sortable(false).RenderValueAs(m =>
    {
        if (m.IsAssigned == false && (User.IsInRole("Management") || User.IsInRole("Administrator") || User.IsInRole("Superadmin")))
        {
            return @<div><i title="Dodijeli priliku" class="fa fa-check-circle-o fa-2x text-success assinged"></i></div>;
        }
        return @<div><span><i class="fa fa-times-circle-o fa-2x text-danger" title="Kartica je već dodijeljena"></i> Dodijeljeno agentu: <strong>@Html.Raw(m.AssignedTo)</strong></span></div>;
    });
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(m =>
    {
        if ((User.Identity.Name == m.AssignedTo) || (User.IsInRole("Management") || User.IsInRole("Administrator") || User.IsInRole("Superadmin")))
            return @<span>
                 <a href = "@Url.RouteUrl(new { action = "Details", controller = "Opportunities", area = "Sales", id = m.OpportunityId, returnUrl = Request.Url })" title = "Detalji prodajne prilike" ><i class="fa fa-list"></i></a>
            <a href = "@Url.RouteUrl(new { action = "Edit", controller = "Opportunities", area = "Sales", id = m.OpportunityId, returnUrl = Request.Url })" title = "Uređivanje prodajne prilike" ><i class="fa fa-edit"></i></a>
            </span>;
        if (User.IsInRole("Administrator") || User.IsInRole("Superadmin"))
            return @<span>
           <a href="@Url.RouteUrl(new { action = "Delete", controller = "Opportunities", area = "Sales", id = m.OpportunityId, returnUrl = Request.Url })" title="Brisanje kampanje"><i class="fa fa-trash"></i></a>
    </span>;

        return @<span>
    </span>;
});
}).WithPaging(20)
