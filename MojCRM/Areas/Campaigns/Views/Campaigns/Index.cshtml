@using System.Web.UI.WebControls
@using GridMvc.Html
@using MojCRM.Areas.Campaigns.Models
@model IQueryable<Campaign>

@{
    ViewBag.Title = "Pregled kampanja";
    Layout = "~/Views/Shared/_UserLayoutNew.cshtml";

    var statusList = new List<ListItem>
    {
        new ListItem{ Value= @"0", Text = @"Pokrenuto"},
        new ListItem{ Value= @"1", Text = @"U tijeku"},
        new ListItem{ Value= @"99", Text = @"Pokrenuto i U tijeku"},
        //new ListItem{ Value= @"2", Text = @"Privremeno zaustavljeno"},
        new ListItem{ Value= @"5", Text = @"Baza za tipsku"},
        new ListItem{ Value= @"6", Text = @"Baza za tipsku - cross"},
        new ListItem{ Value= @"98", Text = @"FILTER - tipska"},
        //new ListItem{ Value= @"3", Text = @"Prekinuto"},
        new ListItem{ Value= @"4", Text = @"Završeno"},
        new ListItem{ Value= @"7", Text = @"Završeno - cross"}
    };
    var typeList = new List<ListItem>
    {
        new ListItem{ Value= @"1", Text = @"Ažuriranje baze korisnika"},
        new ListItem{ Value= @"2", Text = @"Prodajna kampanja"},
        new ListItem{ Value= @"3", Text = @"CRM kampanja"},
        new ListItem{ Value= @"4", Text = @"Edukacijska kampanja"}
    };
}

<h2 style="text-align:center"><strong>Pregled kampanja</strong></h2>

<hr />

<div>
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-info">
                <p style="text-align: justify">
                    Brojno stanje kampanja:<br />
                    <br />
                    <ul>
                        <li>Broj pokrenutih kampanja: <strong>@Model.Count(x => x.CampaignStatus == Campaign.CampaignStatusEnum.Start)</strong></li>
                        <li>Broj kampanja u tijeku: <strong>@Model.Count(x => x.CampaignStatus == Campaign.CampaignStatusEnum.InProgress)</strong></li>
                        <li>Broj privremeno zaustavljenih kampanja: <strong>@Model.Count(x => x.CampaignStatus == Campaign.CampaignStatusEnum.Hold)</strong></li>
                        <li>Broj kampanja spremnih za tipsku (cross): <strong>@Model.Count(x => x.CampaignStatus == Campaign.CampaignStatusEnum.ReadyForEmailNotificationCross)</strong></li>
                        <li>Broj kampanja spremnih za tipsku: <strong>@Model.Count(x => x.CampaignStatus == Campaign.CampaignStatusEnum.ReadyForEmailNotification)</strong></li>
                        <li>Broj kampanja s dovršenim crossom: <strong>@Model.Count(x => x.CampaignStatus == Campaign.CampaignStatusEnum.CompletedCross)</strong></li>
                        <li>Broj dovršenih kampanja: <strong>@Model.Count(x => x.CampaignStatus == Campaign.CampaignStatusEnum.Completed)</strong></li>
                    </ul>
                </p>
            </div>
        </div>
    </div>
</div>

@if (User.IsInRole("Administrator") || User.IsInRole("Board") || User.IsInRole("Superadmin") || User.IsInRole("Management"))
{
    <hr />
    using (Html.BeginForm("Index", "Campaigns", FormMethod.Get))
    {
        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="organization">Povezana tvrtka</label>
                    <div id="organization">
                        @Html.TextBox("Organization", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Povezana tvrtka" })
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="campaign-name">Naziv kampanje</label>
                    <div id="campaign-name">
                        @Html.TextBox("CampaignName", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Naziv kampanje" })
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="contract-start-date">Datum početka kampanje</label>
                    <div id="contract-start-date">
                        @Html.TextBox("CampaignStartDate", ViewBag.CurrentFilter as string, new { @class = "date-picker form-control", @placeholder = "Datum početka kampanje", @type = "text", @id = "contract-start-date", @name = "contract-start-date" })
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="contract-start-date">Datum početka UO</label>
                    <div id="contract-start-date">
                        @Html.TextBox("ContractStartDate", ViewBag.CurrentFilter as string, new { @class = "date-picker form-control", @placeholder = "Datum početka UO", @type = "text", @id = "contract-start-date", @name = "contract-start-date" })
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="campaign-status">Tip kampanje</label>
                    <div id="campaign-status">
                        @Html.DropDownList("CampaignType", new SelectList(typeList, "Value", "Text"), "-- Svi tipovi --", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="campaign-status">Status kampanje</label>
                    <div id="campaign-status">
                        @Html.DropDownList("CampaignStatus", new SelectList(statusList, "Value", "Text"), "-- Svi statusi --", new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group" style="margin-bottom:0">
                <input id="Search" type="submit" class="btn btn-primary btn-sm" value="Traži" />
                <input id="btn-reset" type="reset" class="btn btn-warning btn-sm" value="Poništi" />
            </div>
        </div>
    }
    <hr />
}

<hr />

@Html.Grid(Model).Named("PopisKampanja").SetLanguage("hr").EmptyText("Nema rezultata").Columns(columns =>
{
columns.Add(m => m.RelatedCompany.VAT).Encoded(false).Sanitized(false).Titled("Povezana tvrtka").RenderValueAs(x =>
    Html.RouteLink(x.RelatedCompany.SubjectName + " (" + x.RelatedCompany.VAT + ") ", new {action = "Details", controller = "Organizations", area = "", id = x.RelatedCompany.MerId})).Sortable(true);
columns.Add(m => m.CampaignName).Encoded(false).Sanitized(false).Titled("Naziv kampanje").Sortable(true);
//columns.Add(m => m.CampaignDescription).Encoded(false).Sanitized(false).Titled("Opis kampanje").Sortable(false);
columns.Add(m => m.CampaignInitiatior).Encoded(false).Sanitized(false).Titled("Pokrenuo").Sortable(true);
columns.Add(m => m.CampaignTypeString).Encoded(false).Sanitized(false).Titled("Tip kampanje").Sortable(true);
columns.Add(m => m.CampaignStatusString).Encoded(false).Sanitized(false).Titled("Status").Sortable(true).RenderValueAs(m =>
{
    if (m.CampaignStatus == Campaign.CampaignStatusEnum.Start)
    {
        return @<div><span class="label label-critical">@m.CampaignStatusString</span>
               </div>;
    }
    if (m.CampaignStatus == Campaign.CampaignStatusEnum.InProgress)
    {
        return @<div><span class="label label-medium">@m.CampaignStatusString</span>
               </div>;
    }
    if (m.CampaignStatus == Campaign.CampaignStatusEnum.Hold)
    {
        return @<div><span class="label label-low">@m.CampaignStatusString</span>
               </div>;
    }
    if (m.CampaignStatus == Campaign.CampaignStatusEnum.ReadyForEmailNotification)
    {
        return @<div><span class="label label-warning">@m.CampaignStatusString</span>
               </div>;
    }
    if (m.CampaignStatus == Campaign.CampaignStatusEnum.ReadyForEmailNotificationCross)
    {
        return @<div><span class="label label-urgent">@m.CampaignStatusString</span>
               </div>;
    }
    if (m.CampaignStatus == Campaign.CampaignStatusEnum.Ended)
    {
        return @<div><span class="label label-default">@m.CampaignStatusString</span>
               </div>;
    }
    if (m.CampaignStatus == Campaign.CampaignStatusEnum.Completed)
    {
        return @<div><span class="label label-success" title="@m.CampaignAttributes">@m.CampaignStatusString</span>
               </div>;
    }
    if (m.CampaignStatus == Campaign.CampaignStatusEnum.CompletedCross)
    {
        return @<div><span class="label label-success" title="@m.CampaignAttributes">@m.CampaignStatusString</span>
               </div>;
    }

    return @<div></div>;
});
columns.Add(m => m.CampaignStartDate).Encoded(false).Sanitized(false).Titled("Datum početka").Sortable(true).RenderValueAs(m =>
{
    return @<div><span>@Html.Raw(m.CampaignStartDate.ToShortDateString())</span></div>;
});
columns.Add(m => m.CampaignPlannedEndDate).Encoded(false).Sanitized(false).Titled("Planirani završetak").Sortable(true).RenderValueAs(m =>
{
return @<div><span>@Html.Raw(m.CampaignPlannedEndDate.ToShortDateString())</span></div>;
});
    columns.Add(m => m.CampaignEndDate).Encoded(false).Sanitized(false).Titled("Datum završetka").Sortable(true);
    columns.Add(m => m.ContractStartDate).Encoded(false).Sanitized(false).Titled("Datum početka UO").Sortable(true);
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(m =>
    {
        if (User.IsInRole("Administrator") || User.IsInRole("Superadmin") || User.IsInRole("Management") || m.CampaignInitiatior == User.Identity.Name)
        {
            return @<div><span>
                       <a href="@Url.RouteUrl(new { action = "Details", controller = "Campaigns", area = "Campaigns", id=m.CampaignId, returnUrl = Request.Url })" title="Detalji kampanje"><i class="fa fa-list"></i></a>
                       @*<a href="@Url.RouteUrl(new { action = "Edit", controller = "Campaigns", area = "Campaigns", id=m.CampaignId, returnUrl = Request.Url})" title="Uređivanje kampanje"><i class="fa fa-edit"></i></a>*@
                   </span>
               </div>;
    }
    if (User.IsInRole("Administrator") || User.IsInRole("Superadmin"))
    {
    return @<div><span>
        <a href="@Url.RouteUrl(new { action = "Delete", controller = "Campaigns", area = "Campaigns", id=m.CampaignId, returnUrl = Request.Url })" title="Brisanje kampanje"><i class="fa fa-trash"></i></a>
        </span>
    </div>;
    }
    return @<span></span>;
});
}).WithPaging(20)